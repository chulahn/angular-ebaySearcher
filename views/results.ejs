<!DOCTYPE html>
<html lang="en">
<head>

	<script src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.3.3/angular.js"></script>

	<!-- <link href="../styles/style.css" rel="stylesheet"></link> -->
	<link rel="stylesheet/less" type="text/css" href="../styles/style.less"></link>
	<script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/less.js/2.1.1/less.min.js"></script>

	<script src="../controller.js"></script>
	<script>				
		<% 
			var numPages =  JSON.parse(JSON.stringify(ejs_pagination)) 
			var totalEntries = numPages.totalEntries[0]; 
			var entriesPerPage = numPages.entriesPerPage[0] 
		%>
		var entriesPerPage = <%- entriesPerPage %>
		var items = <%- JSON.stringify(ejs_items) %>
		//newItems are items mapped for app usage
		var newItems = <%- JSON.stringify(ejs_newItems) %>
		var totalResults = <%- entriesPerPage %>
		var requestURL = <%- JSON.stringify(ejs_reqURL) %>
		var pageNum = 1;
		var maxPage = Math.ceil(<%- totalEntries %> / <%- entriesPerPage %>);

		Date.prototype.getDateString = function() {
			return this.getMonth()+1 + "/" + this.getDate() + "/" + (this.getYear()-100)
		}

		Date.prototype.getTime = function() {
			return this.getHours() + ":" + this.getMinutes() + ":" + this.getSeconds()
		}

		$(document).ready(function() {
			$('#moreResults').click(function() {
				if (pageNum <= maxPage-1) {
					pageNum += 1;
					var newRequestURL = requestURL + "&paginationInput.pageNumber=" + pageNum;
					console.log(pageNum);
						var request = $.ajax({url : newRequestURL , dataType: "jsonp"});
						console.log(request);
						request.done(parseData);
				}
				if (pageNum == maxPage) {
					$(this).html("Loaded all results");
					$(this).attr('id','allLoaded');
				}
			});

			$('#searchFilter').on('keyup', function() {
				selectedItems.forEach(function(selectedItem) {
					var index = selectedItem.index;
					var checkbox =$('input[name='+index+']'); 
					checkbox.prop('checked', true);
					var row = checkbox.parent().parent();
					row.addClass('highlighted');
				});
			});
		})

		function parseData(result) {
			console.log("parsedata");
			var responseName = "";
			for (response in result) {
				responseName = response;
			}
			result = result[responseName][0];

			var success = result.ack[0];

			if (success === "Success" || success === "Warning") {

				var paginationOutput = result.paginationOutput[0];
			
				var items = result.searchResult[0].item;

				var newItems = items.map(function(item) {

					var itemDetails = {
						id: item.itemId[0],
						img : item.galleryURL[0],
						url : item.viewItemURL[0],
						title : item.title[0],
						condition : (item.condition && item.condition[0] && item.condition[0].conditionDisplayName[0]) || "No Condition Listed",
						conditionID : (item.condition && item.condition[0] && item.condition[0].conditionId[0]) || "No Condition Listed",

						country : (item.country && item.country[0]),
						location: item.location[0],

						startTime : {date : new Date(item.listingInfo[0].startTime[0])},
						endTime : {date : new Date(item.listingInfo[0].endTime[0])},

						status : item.sellingStatus[0].sellingState[0],

						price : parseFloat(item.sellingStatus[0].convertedCurrentPrice[0].__value__),
						shipping : parseFloat(item.shippingInfo[0] && item.shippingInfo[0].shippingServiceCost &&  item.shippingInfo[0].shippingServiceCost[0].__value__) || "Free"
					}

					if (item.shippingInfo[0].shippingType[0] === "Calculated") {
						itemDetails.shipping = "Calculated";
					}

					itemDetails.shortCondID = itemDetails.conditionID[0];

					itemDetails.finalPrice = parseFloat((itemDetails.price + (parseFloat(itemDetails.shipping) || 0)).toFixed(2));

					itemDetails.startTime.str = itemDetails.startTime.date.getDateString() + " " + itemDetails.startTime.date.getTime();
					itemDetails.endTime.str = itemDetails.endTime.date.getDateString() + " " + itemDetails.endTime.date.getTime();

					return itemDetails;
				});
			}
			console.log(newItems);

			addToScope(newItems);
		}

		function addToScope(items) {
			console.log("addToScope");
			var scope = angular.element($('[ng-controller=dataController')).scope();
			scope.items = scope.items.concat(items);

			$('#numEntries').html(scope.items.length);
			
			scope.$apply();
			console.log(scope.items);
		}

	</script>
	<script src="../scripts/script.js"></script>
	<meta charset="UTF-8">
	<title>Search results</title>
</head>

<body ng-app="app" ng-controller="dataController">

	<%= ejs_reqURL %><br/><br/>
	Total Results: <%= totalEntries %><br/>
	Entries per page: <%= entriesPerPage %><br/> 
	Showing {{filteredItems.length}} out of <span id="numEntries"><%- entriesPerPage %></span> results<br/>
	<span id="moreResults">Click Here for More Results</span><br/><br/>
	
	<div id="container">
		<div id="filteredData">
			Filtered {{filteredItems.length}} item(s) <br/>		
			Average Price: {{getAvg(filteredItems, 'price')}}<br/>
			Shipped Price: {{getAvg(filteredItems, 'finalPrice')}}<br/>
			
			{{$parse(lowestItem = getMin(filteredItems, 'finalPrice'))}}
			{{$parse(highestItem = getMax(filteredItems, 'finalPrice'))}}

			Lowest Shipped: <a href="#{{items.indexOf(lowestItem)}}">{{lowestItem.finalPrice || "N/A" }}</a><br/>
			Highest: <a href="#{{items.indexOf(highestItem)}}">{{highestItem.finalPrice || "N/A" }}</a>
			
			
		</div>
		
		<div id="selectedData">
			Selected <span id="selectedItemNum"></span><br/>
			Average Price: <span id="selectedAvg"></span><br/>
			Shipped: <span id="selectedShipped"></span><br/>
			Lowest: <span id="selectedMin"></span><br/>
			Highest: <span id="selectedMax"></span>
		</div>
	</div>

	<input ng-model="searchFilter" id="searchFilter" placeholder="Search auction titles"><br/>
	<input ng-model="completedFilter" type="checkbox">Completed auctions only<br/>
	<input ng-model="newFilter" type="checkbox">New auctions only</body><br/>
	<input type="number" ng-model="minPrice" id="minPriceFilter" placeholder="Enter Minimum Price"><br/>
	<input type="number" ng-model="maxPrice" id="maxPriceFilter" placeholder="Enter Maximum Price"><br/>


	<table id="searchResult">
		<tr>
			<th>Image</th>
			<th>Title</th>
			<th>ID</th>
			<th>Price</th>
			<th>End Date</th>
		</tr>

		<tr ng-repeat = "item in filteredItems=(items | filter : {title:searchFilter, status: completedFilter ? 'EndedWithSales' : '',
		  shortCondID: newFilter ? '1' : '' } |  priceFilter:(minPrice || 0):(maxPrice || 10000) )">

			<td><span class="selected"></span><img ng-src = {{item.img}} ></td>
			<td><input type="checkbox" id="{{items.indexOf(item)}}"><a href = {{item.url}} >{{item.title}}</a></td>
			<td>{{item.id}}</td>
			<td>
				Price: {{item.price}}<br/>
				Shipping: {{item.shipping}}<br/>
				<span class="shipped">Total: {{item.finalPrice}}</span><br/>
				{{if (item.status === "EndedWithoutSales") ? "Ended without sales" : ""}}
				<span class="nosale" ng-if="item.status === 'EndedWithoutSales'">ENDED WITHOUT SALE</span>
			</td>
			<td>{{item.endTime.str}}</td>
		</tr>
	</table>


	<span id="addItems">Add selected items</span>

	<nav></nav>
	<div id="searchResults"></div>
	
</body>
</html>